//
// DO NOT EDIT THIS FILE.
// Generated using AndroidAnnotations 4.8.0.
// 
// You can create a larger work that contains this file and distribute that work under terms of your choice.
//

package ru.orangesoftware.financisto.widget;

import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

import org.androidannotations.api.bean.BeanHolder;
import org.androidannotations.api.builder.FragmentBuilder;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedNotifier;

import java.util.HashMap;
import java.util.Map;

public final class QuickAmountInput_
    extends QuickAmountInput
    implements BeanHolder, HasViews
{
    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();
    private View contentView_;
    private final Map<Class<?> , Object> beans_ = new HashMap<Class<?> , Object>();
    public final static String CURRENCY_ID_ARG = "currencyId";
    public final static String AMOUNT_ARG = "amount";

    @Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
    }

    @Override
    public<T extends View> T internalFindViewById(int id) {
        return ((T)((contentView_ == null)?null:contentView_.findViewById(id)));
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        contentView_ = super.onCreateView(inflater, container, savedInstanceState);
        return contentView_;
    }

    @Override
    public void onDestroyView() {
        super.onDestroyView();
        contentView_ = null;
    }

    private void init_(Bundle savedInstanceState) {
        injectFragmentArguments_();
    }

    @Override
    public void onViewCreated(View view, Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static FragmentBuilder_ builder() {
        return new FragmentBuilder_();
    }

    @Override
    public<T> T getBean(Class<T> key) {
        return ((T) beans_.get(key));
    }

    @Override
    public<T> void putBean(Class<T> key, T value) {
        beans_.put(key, value);
    }

    private void injectFragmentArguments_() {
        Bundle args_ = getArguments();
        if (args_!= null) {
            if (args_.containsKey(CURRENCY_ID_ARG)) {
                this.currencyId = args_.getLong(CURRENCY_ID_ARG);
            }
            if (args_.containsKey(AMOUNT_ARG)) {
                this.amount = args_.getLong(AMOUNT_ARG);
            }
        }
    }

    public static class FragmentBuilder_
        extends FragmentBuilder<FragmentBuilder_, QuickAmountInput>
    {

        @Override
        public QuickAmountInput build() {
            QuickAmountInput_ fragment_ = new QuickAmountInput_();
            fragment_.setArguments(args);
            return fragment_;
        }

        /**
         * @param currencyId
         *     value for this Fragment argument
         * @return
         *     the FragmentBuilder to chain calls
         */
        public FragmentBuilder_ currencyId(long currencyId) {
            args.putLong(CURRENCY_ID_ARG, currencyId);
            return this;
        }

        /**
         * @param amount
         *     value for this Fragment argument
         * @return
         *     the FragmentBuilder to chain calls
         */
        public FragmentBuilder_ amount(long amount) {
            args.putLong(AMOUNT_ARG, amount);
            return this;
        }
    }
}
