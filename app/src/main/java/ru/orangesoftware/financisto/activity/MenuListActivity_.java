//
// DO NOT EDIT THIS FILE.
// Generated using AndroidAnnotations 4.8.0.
// 
// You can create a larger work that contains this file and distribute that work under terms of your choice.
//

package ru.orangesoftware.financisto.activity;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.view.ViewGroup.LayoutParams;

import androidx.core.app.ActivityCompat;
import androidx.fragment.app.Fragment;

import org.androidannotations.api.bean.BeanHolder;
import org.androidannotations.api.builder.ActivityIntentBuilder;
import org.androidannotations.api.builder.PostActivityStarter;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;

import java.util.HashMap;
import java.util.Map;

import ru.orangesoftware.financisto.R;

public final class MenuListActivity_
    extends MenuListActivity
    implements BeanHolder, HasViews, OnViewChangedListener
{
    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();
    private final Map<Class<?> , Object> beans_ = new HashMap<Class<?> , Object>();

    @Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
        setContentView(R.layout.activity_menu_list);
    }

    @Override
    public<T extends View> T internalFindViewById(int id) {
        return ((T) this.findViewById(id));
    }

    private void init_(Bundle savedInstanceState) {
        OnViewChangedNotifier.registerOnViewChangedListener(this);
    }

    @Override
    public void setContentView(int layoutResID) {
        super.setContentView(layoutResID);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view, LayoutParams params) {
        super.setContentView(view, params);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view) {
        super.setContentView(view);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static IntentBuilder_ intent(Context context) {
        return new IntentBuilder_(context);
    }

    public static IntentBuilder_ intent(Fragment supportFragment) {
        return new IntentBuilder_(supportFragment);
    }

    @Override
    public<T> T getBean(Class<T> key) {
        return ((T) beans_.get(key));
    }

    @Override
    public<T> void putBean(Class<T> key, T value) {
        beans_.put(key, value);
    }

    @Override
    public void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        switch (requestCode) {
            case  MenuListItem.ACTIVITY_CSV_EXPORT :
            {
                MenuListActivity_.this.onCsvExportResult(resultCode, data);
                break;
            }
            case  MenuListItem.ACTIVITY_QIF_EXPORT :
            {
                MenuListActivity_.this.onQifExportResult(resultCode, data);
                break;
            }
            case  MenuListItem.ACTIVITY_CSV_IMPORT :
            {
                MenuListActivity_.this.onCsvImportResult(resultCode, data);
                break;
            }
            case  MenuListItem.ACTIVITY_QIF_IMPORT :
            {
                MenuListActivity_.this.onQifImportResult(resultCode, data);
                break;
            }
            case  MenuListItem.ACTIVITY_CHANGE_PREFERENCES :
            {
                MenuListActivity_.this.onChangePreferences();
                break;
            }
            case  RESOLVE_CONNECTION_REQUEST_CODE :
            {
                MenuListActivity_.this.onConnectionRequest(resultCode);
                break;
            }
        }
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        init();
    }

    public static class IntentBuilder_
        extends ActivityIntentBuilder<IntentBuilder_>
    {
        private Fragment fragmentSupport_;

        public IntentBuilder_(Context context) {
            super(context, MenuListActivity_.class);
        }

        public IntentBuilder_(Fragment fragment) {
            super(fragment.getActivity(), MenuListActivity_.class);
            fragmentSupport_ = fragment;
        }

        @Override
        public PostActivityStarter startForResult(int requestCode) {
            if (fragmentSupport_!= null) {
                fragmentSupport_.startActivityForResult(intent, requestCode);
            } else {
                if (context instanceof Activity) {
                    Activity activity = ((Activity) context);
                    ActivityCompat.startActivityForResult(activity, intent, requestCode, lastOptions);
                } else {
                    context.startActivity(intent);
                }
            }
            return new PostActivityStarter(context);
        }
    }
}
